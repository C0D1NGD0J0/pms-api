{
  "auth": {
    "errors": {
      "unauthorized": "Unauthorized",
      "invalidRefreshToken": "Invalid refresh token",
      "tokenExpired": "token expired.",
      "authenticationRequired": "Authentication required",
      "invalidAuthToken": "Invalid authentication token",
      "accountVerificationPending": "Account verification pending",
      "userNotFound": "User not found",
      "clientNotFound": "Client not found",
      "noAccessToClient": "User does not have access to this client",
      "userNotCreated": "User not created",
      "emailPasswordRequired": "Email and password are required.",
      "invalidCredentials": "Invalid email/password combination.",
      "userIdRequired": "User ID is required.",
      "userIdAndcuidRequired": "User ID and account cuid are required.",
      "unableToSelectAccount": "Unable to select account.",
      "activationTokenMissing": "Activation token missing.",
      "invalidActivationToken": "Invalid or expired activation token.",
      "emailRequired": "Email is required to resend activation link.",
      "userEmailRequired": "User email is required.",
      "noRecordFound": "No record found with email provided.",
      "invalidEmailToken": "Invalid email/token is provided.",
      "invalidAuthTokenLogout": "Invalid auth token.",
      "accessTokenNotFound": "Access token not found",
      "refreshTokenNotFound": "Refresh token not found",
      "invalidTokenType": "Invalid token type",
      "allConnectionsDisabled": "All user connections are disabled",
      "connectionInactive": "User connection is inactive",
      "insufficientPermissions": "Insufficient permissions to perform this action",
      "permissionCheckFailed": "Permission check failed",
      "connectionCheckFailed": "Connection check failed",
      "adminRequired": "Admin privileges required",
      "authorizationFailed": "Authorization failed"
    },
    "success": {
      "tokenRefreshed": "Token refreshed successfully",
      "tokenValidated": "Token validated successfully",
      "userHasAccess": "User has access to client",
      "activationEmailSent": "Account activation email has been sent to {{email}}",
      "loginSuccessful": "Login successful.",
      "accountSelected": "Success.",
      "accountActivated": "Account activated successfully.",
      "activationLinkSent": "Activation link has been sent to {{email}}.",
      "passwordResetEmailSent": "Password reset email has been sent to {{email}}",
      "logoutSuccessful": "Logout successful."
    }
  },
  "connection": {
    "errors": {
      "userIdAndClientIdRequired": "User ID and client ID are required",
      "userIdRequired": "User ID is required",
      "userIdsRequired": "User IDs are required",
      "connectionNotFound": "Connection not found",
      "cannotDisconnectFromOtherClient": "Cannot disconnect users from other clients",
      "cannotReconnectToOtherClient": "Cannot reconnect users to other clients",
      "cannotDisconnectLastConnection": "Cannot disconnect the last active connection",
      "cannotUpdateOtherClientConnections": "Cannot update connections for other clients",
      "cannotCheckOtherClientConnections": "Cannot check connections for other clients",
      "updatesRequired": "Updates are required for bulk operation"
    },
    "success": {
      "disconnected": "User disconnected successfully",
      "reconnected": "User reconnected successfully",
      "connectionsRetrieved": "Connections retrieved successfully",
      "bulkUpdateCompleted": "Bulk connection update completed successfully",
      "connectionStatusRetrieved": "Connection status retrieved successfully",
      "statsRetrieved": "Connection statistics retrieved successfully"
    }
  },
  "client": {
    "errors": {
      "clientNotFound": "Client not found",
      "idNumberRequired": "ID number is required when updating identification type",
      "issuingAuthorityRequired": "Issuing authority is required when updating identification type",
      "idTypeRequired": "ID type is required when updating identification number",
      "invalidCompanyEmail": "Invalid company email format",
      "displayNameEmpty": "Display name cannot be empty",
      "validationFailed": "Validation failed",
      "updateFailed": "Failed to update client profile",
      "unableToFetch": "Unable to fetch client details.",
      "detailsNotFound": "Client details not found.",
      "invalidRole": "Invalid role specified",
      "userNotFound": "User not found",
      "userNotInClient": "User is not connected to this client",
      "userAlreadyHasRole": "User already has the role {{role}}",
      "cannotRemoveLastAdmin": "Cannot remove admin role from the last administrator",
      "cannotDisconnectLastAdmin": "Cannot disconnect the last administrator"
    },
    "success": {
      "profileUpdated": "Client profile updated successfully",
      "detailsUpdated": "Client details updated successfully",
      "detailsRetrieved": "Client details retrieved successfully",
      "roleAssigned": "Role {{role}} assigned successfully",
      "roleRemoved": "Role {{role}} removed successfully",
      "rolesRetrieved": "User roles retrieved successfully",
      "userDisconnected": "User disconnected successfully",
      "userReconnected": "User reconnected successfully",
      "usersRetrieved": "Client users retrieved successfully"
    }
  },
  "property": {
    "errors": {
      "noCsvFileUploaded": "No CSV file uploaded",
      "invalidFormType": "Invalid form type: {{formType}}",
      "validationFailed": "Property validation failed. Please correct the errors and try again.",
      "unableToAddProperty": "Unable to add property to this account.",
      "duplicateAddress": "A property with this address already exists for this client",
      "unableToCreateProperty": "Unable to create property.",
      "minUnitsRequired": "{{propertyType}} properties require at least {{minUnits}} units",
      "noBedroomsForCommercial": "Commercial properties should not have bedrooms defined at property level",
      "commercialMinArea": "Commercial properties must have at least 200 sq ft of total area",
      "industrialLotSizeRequired": "Industrial properties must specify lot size",
      "industrialMinArea": "Industrial properties must have at least 1000 sq ft of total area",
      "occupiedRentalRequired": "Occupied properties must have a valid rental amount",
      "businessRuleValidationFailed": "Property type business rule validation failed",
      "noCsvFilePath": "No CSV file path provided",
      "propertyIdRequired": "Property ID is required.",
      "uploadResultRequired": "Upload result is required.",
      "propertyNotFound": "Unable to find client property.",
      "unableToUpdateProperty": "Unable to update property.",
      "fileSizeTooLarge": "File size too large for processing.",
      "clientIdRequired": "Client ID is required.",
      "unableToGetProperties": "Unable to get properties for this account.",
      "clientIdAndPropertyIdRequired": "Client ID and Property ID are required.",
      "updateValidationFailed": "Update validation failed. Please correct the errors and try again.",
      "occupiedPropertiesMustHaveRental": "Occupied properties must have a rental amount",
      "singleUnitCannotBePartiallyOccupied": "Single-unit properties cannot be partially occupied",
      "occupancyStatusValidationFailed": "Occupancy status change validation failed",
      "unableToArchiveProperty": "Unable to archive property.",
      "csvFilePathMissing": "CSV file path missing",
      "csvValidationFailed": "Unable to validate csv for this account."
    },
    "success": {
      "propertyCreated": "Property created successfully.",
      "csvImportStarted": "CSV import job started",
      "propertyUpdated": "Property updated successfully",
      "csvValidationStarted": "CSV validation process started.",
      "propertyArchived": "Property archived successfully"
    }
  },
  "propertyUnit": {
    "errors": {
      "noDocumentFileUploaded": "No document file uploaded",
      "unableToAddUnit": "Unable to add unit to property.",
      "propertyNotFound": "Unable to add unit to property, property not found.",
      "unableToGetDetails": "Unable to get property unit details.",
      "unableToGetUnitFromProperty": "Unable to get unit from property, property not found.",
      "unitNotFound": "Unable to get unit from property, unit not found.",
      "unableToGetUnits": "Unable to get property units.",
      "unableToGetUnitsFromProperty": "Unable to get units from property, property not found.",
      "unableToUpdateUnit": "Unable to update property unit.",
      "cannotUpdateDueToStatus": "Cannot update unit, due to property status of {{status}}.",
      "rentalAmountMustBeNonNegative": "Rental amount must be a non-negative number",
      "securityDepositMustBeNonNegative": "Security deposit must be a non-negative number",
      "cannotSetOccupiedWhenProperty": "Cannot set unit as occupied when property is {{status}}",
      "occupiedUnitsMustHaveRental": "Occupied units must have a rental amount",
      "validationFailed": "Validation failed",
      "documentDeletionNotImplemented": "Document deletion functionality needs to be implemented",
      "maxCapacityReached": "Unable to add units to property, maximum capacity reached.",
      "exceedsLimit": "Cannot add {{count}} units. Property has {{current}}/{{max}} units (including archived). Adding these units would exceed the limit.",
      "duplicateUnitNumbers": "Duplicate unit numbers found in batch: {{unitNumbers}}",
      "patternInconsistency": "Pattern inconsistency detected: {{recommendation}}",
      "unitNumberAlreadyExists": "A unit with number '{{unitNumber}}' already exists for this property",
      "unitSuggestion": "Suggested unit number: {{suggestion}}"
    },
    "success": {
      "unitRetrieved": "Unit retrieved successfully.",
      "unitsRetrieved": "Units retrieved successfully.",
      "unitUpdated": "Unit updated successfully",
      "unitCreationQueued": "Unit creation job queued successfully",
      "unitsCreated": "{{created}} units created successfully, {{failed}} failed",
      "allUnitsCreated": "All {{count}} units created successfully"
    }
  },
  "validation": {
    "auth": {
      "firstNameMinLength": "First name must be at least 2 characters",
      "firstNameMaxLength": "First name must be at most 25 characters",
      "lastNameMinLength": "Last name must be at least 2 characters",
      "lastNameMaxLength": "Last name must be at most 25 characters",
      "invalidEmail": "Invalid email address",
      "emailInUse": "Email already in use.",
      "passwordMinLength": "Password must be at least 6 characters",
      "locationMaxLength": "Location(city) must be at most 35 characters",
      "invalidCityName": "Please enter a valid city name",
      "invalidPlanName": "Invalid plan name provided.",
      "invalidUrl": "Invalid URL provided.",
      "companyNameRequired": "Company name is required",
      "invalidCompanyEmail": "Invalid company email",
      "legalEntityNameRequired": "Legal entity name is required",
      "companyAddressRequired": "Company address is required",
      "companyPhoneRequired": "Company phone number is required",
      "contactPersonRequired": "Contact person is required",
      "businessRegNumberRequired": "Business registration number is required",
      "idNumberRequired": "ID number is required",
      "issuingAuthorityRequired": "Issuing authority is required",
      "issuingStateRequired": "Issuing state is required",
      "companyProfileRequired": "Company profile is required for business accounts",
      "invalidEmergencyEmail": "Invalid emergency contact email",
      "invalidToken": "Invalid token provided",
      "tokenExpiredOrInvalid": "Token is invalid or has expired",
      "emailBlank": "Email can't be blank",
      "invalidEmailFormat": "Invalid email format.",
      "invalidEmailAddress": "Invalid email address provided.",
      "invalidUrlTokenMissing": "Invalid url, token missing.",
      "passwordResetTokenInvalid": "Password reset token is invalid or has expired",
      "passwordBlank": "Password field can't be blank",
      "passwordMinLengthDetailed": "Password must be at least 6 characters long.",
      "passwordMaxLength": "Password must be no longer than 15 characters.",
      "emailFieldBlank": "Email field can't be blank.",
      "invalidPasswordValue": "Invalid password value provided.",
      "databaseTimeout": "Database connection timeout. Please try again.",
      "companyNameRequiredForBusiness": "Company name is required for business accounts",
      "legalEntityNameRequiredForBusiness": "Legal entity name is required for business accounts"
    },
    "client": {
      "clientIdMinLength": "Client ID must be at least 8 characters",
      "invalidTimezone": "Invalid timezone",
      "invalidLanguageCode": "Invalid language code format",
      "legalEntityNameRequired": "Legal entity name is required",
      "tradingNameRequired": "Trading name is required",
      "invalidEmailFormat": "Invalid email format",
      "invalidWebsiteUrl": "Invalid website URL",
      "invalidPhoneFormat": "Invalid phone number format",
      "invalidIssueDateFormat": "Invalid issue date format",
      "invalidExpiryDateFormat": "Invalid expiry date format",
      "idNumberRequired": "ID number is required",
      "issuingStateRequired": "Issuing state is required",
      "displayNameRequired": "Display name is required",
      "displayNameCannotBeEmpty": "Display name cannot be empty",
      "atLeastOneFieldRequired": "At least one field must be provided for update",
      "idTypeAndNumberRequired": "When updating identification, both idType and idNumber are required",
      "invalidCompanyEmail": "Invalid company email format"
    },
    "property": {
      "totalAreaPositive": "Total area must be a positive number",
      "lotSizePositive": "Lot size must be a positive number",
      "bedroomsNonNegative": "Bedrooms must be a non-negative integer",
      "bathroomsNonNegative": "Bathrooms must be a non-negative number",
      "floorsMinOne": "Floors must be at least 1",
      "garageSpacesNonNegative": "Garage spaces must be a non-negative integer",
      "maxOccupantsMinOne": "Maximum occupants must be at least 1",
      "purchasePricePositive": "Purchase price must be a positive number",
      "invalidPurchaseDate": "Invalid date format for purchase date",
      "marketValuePositive": "Market value must be a positive number",
      "propertyTaxNonNegative": "Property tax must be a non-negative number",
      "invalidAssessmentDate": "Invalid date format for last-assesment date",
      "taxAmountNonNegative": "Tax amount must be a non-negative number",
      "rentalAmountNonNegative": "Rental amount must be a non-negative number",
      "managementFeesNonNegative": "Management fees must be a non-negative number",
      "securityDepositNonNegative": "Security deposit must be a non-negative number",
      "invalidDocumentUrl": "Invalid URL format for document",
      "invalidUploadedDate": "Invalid date format for uploaded date",
      "descriptionMaxLength": "Description must be at most 150 characters",
      "documentNameMaxLength": "Document name must be at most 100 characters",
      "descriptionTextMaxLength": "Description text must be at most 2000 characters",
      "descriptionHtmlMaxLength": "Description HTML must be at most 2000 characters",
      "propertyNameMinLength": "Property name must be at least 3 characters",
      "propertyNameMaxLength": "Property name must be at most 100 characters",
      "yearBuiltMinimum": "Year built must be at least 1800",
      "yearBuiltMaximum": "Year built must be at most {{year}}",
      "addressMinLength": "Address must be at least 5 characters",
      "formattedAddressMinLength": "Formatted address must be at least 5 characters",
      "streetNumberRequired": "Street number cannot be empty",
      "streetNumberPositive": "Street number must be positive",
      "coordinatesFormat": "Coordinates must be an array of two numbers",
      "postCodeRequired": "Post code cannot be empty",
      "duplicateAddressExists": "A property with this address already exists for this client.",
      "invalidParamsDetected": "Invalid params detected in the request.",
      "propertyNotFound": "Property not found",
      "clientIdRequired": "Client ID is required",
      "propertyIdRequired": "Property ID is required",
      "propertyNotFoundForClient": "Property not found for the given client ID.",
      "addressTooLong": "Address is too long",
      "addressShouldContainStreet": "Address should contain street number and name"
    },
    "propertyUnit": {
      "invalidUnitId": "Invalid unit ID",
      "totalAreaPositive": "Total area must be a positive number",
      "roomsNonNegative": "room must be a non-negative integer",
      "bathroomsNonNegative": "Bathrooms must be a non-negative number",
      "maxOccupantsMinOne": "Maximum occupants must be at least 1",
      "rentNonNegative": "Rent amount must be a non-negative number",
      "securityDepositNonNegative": "Security deposit must be a non-negative number",
      "invalidPhotoUrl": "Invalid URL format for photo",
      "invalidDocumentUrl": "Invalid URL format for document",
      "invalidExternalUrl": "Invalid external URL format",
      "descriptionMaxLength": "Description must be at most 150 characters",
      "documentNameMaxLength": "Document name must be at most 100 characters",
      "invalidAttachmentUrl": "Invalid URL format for attachment",
      "unitNumberRequired": "Unit number must not be empty",
      "unitNumberMaxLength": "Unit number must be at most 20 characters",
      "floorMinimum": "Floor cannot be less than -5",
      "floorMaximum": "Floor cannot be greater than 100",
      "unitDescriptionMaxLength": "Description must be at most 500 characters",
      "propertyNotExist": "Property does not exist",
      "unitNumberExists": "A unit with number '{{unitNumber}}' already exists for this property",
      "atLeastOneUnitRequired": "At least one unit is required",
      "maxUnitsAllowed": "Maximum 20 units allowed. For bulk operations, please use CSV upload instead.",
      "duplicateUnitNumbers": "Duplicate unit numbers found in batch: {{unitNumbers}}",
      "patternInconsistency": "Pattern inconsistency detected: {{recommendation}}",
      "invalidPropertyId": "Invalid property ID",
      "customPrefixMaxLength": "Custom prefix must be at most 10 characters",
      "unitNotExist": "Unit does not exist for this property"
    }
  },
  "fileUpload": {
    "errors": {
      "uploadError": "File upload error",
      "unexpectedField": "Unexpected field: {{field}}",
      "tooManyFiles": "Too many files uploaded",
      "fileNotFound": "File {{filename}} not found",
      "fileTypeNotSupported": "File type not supported. Allowed types: {{allowedTypes}}",
      "invalidFileTypeForField": "For field \"{{fieldname}}\", only these file types are allowed: {{fileTypes}}",
      "fileSizeExceeded": "{{filename}} exceeds max allowed size of {{maxSize}}MB for field \"{{fieldname}}\""
    }
  },
  "csv": {
    "errors": {
      "clientNotFound": "Client with ID {{cuid}} not found",
      "invalidManagerEmail": "Invalid manager email",
      "invalidAddress": "Invalid address: {{address}}",
      "geocodingError": "Error during geocoding: {{error}}",
      "managerEmailRequired": "Manager email is required",
      "userNotFound": "No user found with email: {{email}}",
      "userNotAssociated": "User {{email}} is not associated with this client",
      "userRoleNotPermitted": "User role not permitted for this action.",
      "managerEmailValidationError": "Error validating manager email: {{error}}"
    }
  },
  "unitNumbering": {
    "suggestions": {
      "suggestedPattern": "Using suggested number with {{pattern}} pattern",
      "startingNewPattern": "Starting new {{pattern}} pattern",
      "followingAlphabetic": "Following alphabetic pattern for floor {{floor}}",
      "followingBuildingUnit": "Following building-unit pattern for building {{building}}",
      "followingFloorBased": "Following floor-based numbering pattern",
      "followingSequential": "Following sequential numbering pattern",
      "followingWingUnit": "Following wing-unit pattern for wing {{wing}}",
      "followingCustom": "Following custom pattern with prefix \"{{prefix}}\"",
      "followingSuite": "Following suite numbering pattern"
    },
    "errors": {
      "unitNumberSuggestsWrongFloor": "Unit number \"{{unitNumber}}\" suggests Floor {{expectedFloor}} ({{patternName}}), but Floor {{floor}} is selected.",
      "noUnitsToValidate": "No units to validate",
      "mixedPatternsDetected": "Mixed patterns detected: {{patterns}}. Consider standardizing to one pattern.",
      "unitNumberAlreadyExists": "Unit number \"{{unitNumber}}\" already exists"
    },
    "success": {
      "allUnitsFollowPattern": "All units follow {{pattern}} pattern",
      "unitNumberValid": "Unit number is valid"
    }
  },
  "email": {
    "accountUpdate": {
      "greeting": "Hello {{fullname}},",
      "message": "This email is to inform you that, your account was recently updated at {{updatedAt}}. If you feel this update wasn't carried out by you please contact customer support.",
      "supportText": "customer support email: Customer support"
    },
    "forgotPassword": {
      "subject": "Reset Your Password",
      "greeting": "Hello {{fullname}},",
      "message": "We received a request to reset your password. Click the button below to set a new password for your Property Solutions account.",
      "buttonText": "Reset Password",
      "alternativeText": "If the button doesn't work, copy and paste this link in your browser:",
      "expiryText": "This link will expire in 1 hour. If you didn't request a password reset, please ignore this email."
    },
    "registration": {
      "subject": "Activate Your Account",
      "greeting": "Hello {{fullname}},",
      "message": "Welcome to Property Solutions! To complete your account setup, please click the button below to activate your account.",
      "buttonText": "Activate Account",
      "alternativeText": "If the button doesn't work, copy and paste this link in your browser:",
      "expiryText": "This link will expire in 2 hours. If you didn't create an account, please ignore this email."
    },
    "resetPassword": {
      "greeting": "Hello {{fullname}},",
      "message": "Your password has successfully been updated.for your account.",
      "warningText": "If you didn't initiate this equest please contact customer care urgently."
    }
  },
  "system": {
    "errors": {
      "unexpectedError": "An unexpected error occurred",
      "internalServerError": "Internal Server Error"
    }
  },
  "propertyValidation": {
    "errors": {
      "fieldRequired": "{{fieldName}} is required",
      "fieldMustBeNumber": "{{fieldName}} must be a valid number",
      "fieldMinimum": "{{fieldName}} must be at least {{min}}",
      "fieldMaximum": "{{fieldName}} cannot exceed {{max}}",
      "fieldCannotBeNegative": "{{fieldName}} cannot be negative",
      "fieldMustBeValidDate": "{{fieldName}} must be a valid date",
      "fieldCannotBeFuture": "{{fieldName}} cannot be in the future",
      "fieldCannotBeBefore": "{{fieldName}} cannot be before {{date}}",
      "fieldCannotBeAfter": "{{fieldName}} cannot be after {{date}}",
      "fieldRequiredForPropertyType": "{{fieldName}} is required for {{propertyType}} properties",
      "fieldMustBeWholeNumber": "{{fieldName}} must be a whole number",
      "propertyNameMinLength": "Property name must be at least 3 characters",
      "propertyAddressMinLength": "Property address must be at least 5 characters",
      "bedroomsUnitLevel": "{{propertyType}} properties should manage bedrooms at the unit level",
      "bathroomsUnitLevel": "{{propertyType}} properties should manage bathrooms at the unit level",
      "totalAreaRequiredForType": "Total area is required for {{propertyType}} properties",
      "lotSizeRequiredForType": "Lot size is required for {{propertyType}} properties",
      "occupiedMustHaveRental": "Occupied properties must have a rental amount greater than 0",
      "singleUnitCannotBePartiallyOccupied": "Single-unit properties cannot be partially occupied",
      "commercialShouldNotHaveBedrooms": "Commercial properties typically should not have bedrooms",
      "propertyTypeMinUnits": "{{propertyType}} properties typically require at least {{minUnits}} units",
      "fieldMinLengthRequired": "{{fieldName}} must be at least {{minLength}} characters",
      "fieldMaxLengthExceeded": "{{fieldName}} cannot exceed {{maxLength}} characters"
    }
  },
  "invitation": {
    "success": {
      "csvImportStarted": "CSV import started successfully",
      "csvValidationStarted": "CSV validation started",
      "dryRunCompleted": "Dry run completed",
      "pendingProcessed": "Processed {{processed}} of {{total}} pending invitations"
    },
    "info": {
      "noPendingFound": "No pending invitations found"
    },
    "errors": {
      "notFound": "Invitation not found",
      "cannotResend": "Cannot resend this invitation",
      "expired": "Invitation has expired"
    }
  },
  "email": {
    "invitation": {
      "subject": "You've been invited to join {{companyName}}"
    }
  }
}
